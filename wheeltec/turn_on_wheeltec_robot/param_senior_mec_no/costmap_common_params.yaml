
# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
# robot_radius: 0.4  # 如果机器人圆形的，注释下面的一行，开启这个
#footprint: [[-0.206, -0.208], [-0.206, 0.208],[0.206,0.208],[0.206, -0.208]]  # 机器人形状
# footprint: [[-0.195, -0.21], [-0.195, 0.21],[0.195,0.21],[0.195, -0.21]]  # 机器人形状
footprint: [[-0.95, -0.55], [-0.95, 0.45],[0.95,0.45],[0.95, -0.55]]  # 机器人形状
# footprint_padding: 0.05



obstacle_layer:
  enabled:              true #使能障碍层
  max_obstacle_height:  2.0
  min_obstacle_height:  0.0
  # transform_tolerance:   0.2
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             10
  unknown_threshold:    2
  mark_threshold:       0
 
  footprint_clearing_enabled: false

  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 6 #这些参数设置了代价地图中的障碍物信息的阈值。 "obstacle_range" 参数确定最大范围传感器读数
  #这将导致障碍物被放入代价地图中。在这里，我们把它设置在2.5米，这意味着机器人只会更新其地图包含距离移动基座2.5米以内的障碍物的信息。
  raytrace_range: 6.5 #“raytrace_range”参数确定了用于清除指定范围外的空间。将其设置为3.0米，
  # 这意味着机器人将尝试清除3米外的空间，在代价地图中清除3米外的障碍物。
  #origin_z: 0.0
  #z_resolution: 0.2
  #z_voxels: 2
  # publish_voxel_map: true


  observation_sources: merged_scan cam_F cam_B cam_FF cam_BB #pointcloud  #scan_F scan_B scan_L scan_R scan_FF scan_BB #camera_scan
  
  merged_scan:
    data_type: LaserScan
    sensor_frame: laser
    topic: "/sick_s1_scan_merged"
    clearing: true
    marking: true
    inf_is_valid: true

  cam_F:
    data_type: LaserScan
    sensor_frame: cam_F_link
    topic: "/cam_F/scan"
    clearing: true
    marking: true
    inf_is_valid: true

  cam_B:
    data_type: LaserScan
    sensor_frame: cam_B_link
    topic: "/cam_B/scan"
    clearing: true
    marking: true
    inf_is_valid: true

  cam_FF:
    data_type: LaserScan
    sensor_frame: cam_FF_link
    topic: "/cam_FF/scan_filtered"
    clearing: true
    marking: true
    inf_is_valid: true

  cam_BB:
    data_type: LaserScan
    sensor_frame: cam_BB_link
    topic: "/cam_BB/scan_filtered"
    clearing: true
    marking: true
    inf_is_valid: true

  pointcloud:
    data_type: PointCloud2
    topic: "/point_cloud2"
    # sensor_frame: map
    marking: true
    clearing: true
    expected_update_rate: 0




#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
global_inflation_layer:
  enabled:              true #使能膨胀层
  # cost_scaling_factor:  2.58  # exponential rate at which the obstacle cost drops off (default: 10)
  # inflation_radius:     0.6  # 机器人膨胀半径，比如设置为0.3,意味着规划的路径距离0.3米以上，这个参数理论上越大越安全
  cost_scaling_factor:  2.58  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.8  # 机器人膨胀半径，比如设置为0.3,意味着规划的路径距离0.3米以上，这个参数理论上越大越安全


  #但是会导致无法穿过狭窄的地方

local_inflation_layer:
  enabled:              true #使能膨胀层
  cost_scaling_factor:  10  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.25  # 机器人膨胀半径，比如设置为0.3,意味着规划的路径距离0.3米以上，这个参数理论上越大越安全

  #但是会导致无法穿过狭窄的地方

static_layer:
  enabled:              true
  map_topic:            "/nav_map"


marker_layer:
  enabled:              true
  max_obstacle_height:  1.5
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             5
  unknown_threshold:    2
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 5.5
  raytrace_range: 6.0
  publish_voxel_map: true
  observation_sources: back_sense other_robot_pos
  back_sense:
    data_type: LaserScan
    topic: /camera2/scan
    sensor_frame: depth_laserscan_2
    marking: true
    clearing: true
    min_obstacle_height: 0.0
    max_obstacle_height: 1.5
    observation_persistence: 0.0
    expected_update_rate: 0.0

  other_robot_pos:
    data_type: PointCloud2
    topic: /taimi/other_robot_pos
    sensor_frame: map
    marking: true
    clearing: true
    min_obstacle_height: 0.0
    max_obstacle_height: 1.5
    observation_persistence: 0.0
    expected_update_rate: 0.0

